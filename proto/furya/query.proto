syntax = "proto3";
package furya.furya;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "furya/params.proto";
import "furya/furya.proto";
import "cosmos/base/v1beta1/coin.proto";
import "furya/delegations.proto";

option go_package = "github.com/furya-official/furya/x/furya/types";

service Query {
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/terra/furyas/params";
  }

  // Query paginated furyas
  rpc Furyas(QueryFuryasRequest) returns (QueryFuryasResponse) {
    option (google.api.http).get = "/terra/furyas";
  }

  // Query a specific furya by ibc hash
  rpc IBCFurya(QueryIBCFuryaRequest) returns (QueryFuryaResponse) {
    option (google.api.http).get = "/terra/furyas/ibc/{hash}";
  }

  // Query all paginated furya delegations
  rpc AllFuryasDelegations(QueryAllFuryasDelegationsRequest) returns (QueryFuryasDelegationsResponse) {
    option (google.api.http).get = "/terra/furyas/delegations";
  }

  // Query furya validator
  rpc FuryaValidator(QueryFuryaValidatorRequest) returns (QueryFuryaValidatorResponse) {
    option (google.api.http).get = "/terra/furyas/validators/{validator_addr}";
  }

  // Query all paginated furya validators
  rpc AllFuryaValidators(QueryAllFuryaValidatorsRequest) returns (QueryFuryaValidatorsResponse) {
    option (google.api.http).get = "/terra/furyas/validators";
  }

  // Query all paginated furya delegations for a delegator addr
  rpc FuryasDelegation(QueryFuryasDelegationsRequest) returns (QueryFuryasDelegationsResponse) {
    option (google.api.http).get = "/terra/furyas/delegations/{delegator_addr}";
  }

  // Query all paginated furya delegations for a delegator addr and validator_addr
  rpc FuryasDelegationByValidator(QueryFuryasDelegationByValidatorRequest) returns (QueryFuryasDelegationsResponse) {
    option (google.api.http).get = "/terra/furyas/delegations/{delegator_addr}/{validator_addr}";
  }

  // Query a delegation to an furya by delegator addr, validator_addr and denom
  rpc FuryaDelegation(QueryFuryaDelegationRequest) returns (QueryFuryaDelegationResponse) {
    option (google.api.http).get = "/terra/furyas/delegations/{delegator_addr}/{validator_addr}/{denom}";
  }

  // Query a delegation to an furya by delegator addr, validator_addr and denom
  rpc IBCFuryaDelegation(QueryIBCFuryaDelegationRequest) returns (QueryFuryaDelegationResponse) {
    option (google.api.http).get = "/terra/furyas/delegations/{delegator_addr}/{validator_addr}/ibc/{hash}";
  }

  // Query for rewards by delegator addr, validator_addr and denom
  rpc FuryaDelegationRewards(QueryFuryaDelegationRewardsRequest) returns (QueryFuryaDelegationRewardsResponse) {
    option (google.api.http).get = "/terra/furyas/rewards/{delegator_addr}/{validator_addr}/{denom}";
  }
  // Query for rewards by delegator addr, validator_addr and denom
  rpc IBCFuryaDelegationRewards(QueryIBCFuryaDelegationRewardsRequest) returns (QueryFuryaDelegationRewardsResponse) {
    option (google.api.http).get = "/terra/furyas/rewards/{delegator_addr}/{validator_addr}/ibc/{hash}";
  }

  // Query a specific furya by denom
  rpc Furya(QueryFuryaRequest) returns (QueryFuryaResponse) {
    option (google.api.http).get = "/terra/furyas/{denom}";
  }
}

// Params
message QueryParamsRequest { }

message QueryParamsResponse {
  Params params = 1 [(gogoproto.nullable) = false];
}

// Furyas
message QueryFuryasRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;

}
message QueryFuryasResponse {
  repeated FuryaAsset furyas = 1 [(gogoproto.nullable) = false];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// Furya
message QueryFuryaRequest {
  string denom = 1;
}

message QueryFuryaResponse {
  FuryaAsset furya = 1;
}

message QueryIBCFuryaRequest {
  string hash = 1;
}

message QueryFuryaValidatorRequest {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string validator_addr = 1;
}

message QueryAllFuryaValidatorsRequest {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllFuryasDelegationsRequest {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

// FuryasDelegation
message QueryFuryasDelegationsRequest {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string delegator_addr = 1;
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

// FuryasDelegationByValidator
message QueryFuryasDelegationByValidatorRequest {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string delegator_addr  = 1;
  string validator_addr  = 2;
  cosmos.base.query.v1beta1.PageRequest pagination = 3;
}

// DelegationResponse is equivalent to Delegation except that it contains a
// balance in addition to shares which is more suitable for client responses.
message DelegationResponse {
  option (gogoproto.equal) = false;

  Delegation delegation = 1 [(gogoproto.nullable) = false];

  cosmos.base.v1beta1.Coin balance = 2 [(gogoproto.nullable) = false];
}

message QueryFuryasDelegationsResponse {
  repeated DelegationResponse delegations = 1 [(gogoproto.nullable) = false];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// FuryaDelegation
message QueryFuryaDelegationRequest {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string delegator_addr  = 1;
  string validator_addr  = 2;
  string denom           = 3;
  cosmos.base.query.v1beta1.PageRequest pagination = 4;
}

message QueryIBCFuryaDelegationRequest {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string delegator_addr  = 1;
  string validator_addr  = 2;
  string hash            = 3;
  cosmos.base.query.v1beta1.PageRequest pagination = 4;
}

message QueryFuryaDelegationResponse {
  DelegationResponse delegation = 1 [(gogoproto.nullable) = false];
}

// FuryaDelegation
message QueryFuryaDelegationRewardsRequest {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string delegator_addr  = 1;
  string validator_addr  = 2;
  string denom           = 3;
  cosmos.base.query.v1beta1.PageRequest pagination = 4;
}

message QueryIBCFuryaDelegationRewardsRequest {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string delegator_addr  = 1;
  string validator_addr  = 2;
  string hash            = 3;
  cosmos.base.query.v1beta1.PageRequest pagination = 4;
}

message QueryFuryaDelegationRewardsResponse {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  repeated cosmos.base.v1beta1.Coin rewards = 1 [
    (gogoproto.nullable) = false,
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Coin"
  ];
}

message QueryFuryaValidatorResponse {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string validator_addr = 1;
  repeated cosmos.base.v1beta1.DecCoin total_delegation_shares = 2 [
    (gogoproto.nullable)   = false
  ];
  repeated cosmos.base.v1beta1.DecCoin validator_shares = 3 [
    (gogoproto.nullable)   = false
  ];
  repeated cosmos.base.v1beta1.DecCoin total_staked = 4 [
    (gogoproto.nullable)   = false
  ];
}

message QueryFuryaValidatorsResponse {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  repeated QueryFuryaValidatorResponse validators = 1 [
    (gogoproto.nullable)   = false
  ];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}