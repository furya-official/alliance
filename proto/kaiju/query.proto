syntax = "proto3";
package kaiju.kaiju;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "kaiju/params.proto";
import "kaiju/kaiju.proto";
import "cosmos/base/v1beta1/coin.proto";
import "kaiju/delegations.proto";

option go_package = "github.com/furya-official/kaiju/x/kaiju/types";

service Query {
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/terra/kaijus/params";
  }

  // Query paginated kaijus
  rpc Kaijus(QueryKaijusRequest) returns (QueryKaijusResponse) {
    option (google.api.http).get = "/terra/kaijus";
  }

  // Query a specific kaiju by ibc hash
  rpc IBCKaiju(QueryIBCKaijuRequest) returns (QueryKaijuResponse) {
    option (google.api.http).get = "/terra/kaijus/ibc/{hash}";
  }

  // Query all paginated kaiju delegations
  rpc AllKaijusDelegations(QueryAllKaijusDelegationsRequest) returns (QueryKaijusDelegationsResponse) {
    option (google.api.http).get = "/terra/kaijus/delegations";
  }

  // Query kaiju validator
  rpc KaijuValidator(QueryKaijuValidatorRequest) returns (QueryKaijuValidatorResponse) {
    option (google.api.http).get = "/terra/kaijus/validators/{validator_addr}";
  }

  // Query all paginated kaiju validators
  rpc AllKaijuValidators(QueryAllKaijuValidatorsRequest) returns (QueryKaijuValidatorsResponse) {
    option (google.api.http).get = "/terra/kaijus/validators";
  }

  // Query all paginated kaiju delegations for a delegator addr
  rpc KaijusDelegation(QueryKaijusDelegationsRequest) returns (QueryKaijusDelegationsResponse) {
    option (google.api.http).get = "/terra/kaijus/delegations/{delegator_addr}";
  }

  // Query all paginated kaiju delegations for a delegator addr and validator_addr
  rpc KaijusDelegationByValidator(QueryKaijusDelegationByValidatorRequest) returns (QueryKaijusDelegationsResponse) {
    option (google.api.http).get = "/terra/kaijus/delegations/{delegator_addr}/{validator_addr}";
  }

  // Query a delegation to an kaiju by delegator addr, validator_addr and denom
  rpc KaijuDelegation(QueryKaijuDelegationRequest) returns (QueryKaijuDelegationResponse) {
    option (google.api.http).get = "/terra/kaijus/delegations/{delegator_addr}/{validator_addr}/{denom}";
  }

  // Query a delegation to an kaiju by delegator addr, validator_addr and denom
  rpc IBCKaijuDelegation(QueryIBCKaijuDelegationRequest) returns (QueryKaijuDelegationResponse) {
    option (google.api.http).get = "/terra/kaijus/delegations/{delegator_addr}/{validator_addr}/ibc/{hash}";
  }

  // Query for rewards by delegator addr, validator_addr and denom
  rpc KaijuDelegationRewards(QueryKaijuDelegationRewardsRequest) returns (QueryKaijuDelegationRewardsResponse) {
    option (google.api.http).get = "/terra/kaijus/rewards/{delegator_addr}/{validator_addr}/{denom}";
  }
  // Query for rewards by delegator addr, validator_addr and denom
  rpc IBCKaijuDelegationRewards(QueryIBCKaijuDelegationRewardsRequest) returns (QueryKaijuDelegationRewardsResponse) {
    option (google.api.http).get = "/terra/kaijus/rewards/{delegator_addr}/{validator_addr}/ibc/{hash}";
  }

  // Query a specific kaiju by denom
  rpc Kaiju(QueryKaijuRequest) returns (QueryKaijuResponse) {
    option (google.api.http).get = "/terra/kaijus/{denom}";
  }
}

// Params
message QueryParamsRequest { }

message QueryParamsResponse {
  Params params = 1 [(gogoproto.nullable) = false];
}

// Kaijus
message QueryKaijusRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;

}
message QueryKaijusResponse {
  repeated KaijuAsset kaijus = 1 [(gogoproto.nullable) = false];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// Kaiju
message QueryKaijuRequest {
  string denom = 1;
}

message QueryKaijuResponse {
  KaijuAsset kaiju = 1;
}

message QueryIBCKaijuRequest {
  string hash = 1;
}

message QueryKaijuValidatorRequest {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string validator_addr = 1;
}

message QueryAllKaijuValidatorsRequest {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllKaijusDelegationsRequest {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

// KaijusDelegation
message QueryKaijusDelegationsRequest {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string delegator_addr = 1;
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

// KaijusDelegationByValidator
message QueryKaijusDelegationByValidatorRequest {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string delegator_addr  = 1;
  string validator_addr  = 2;
  cosmos.base.query.v1beta1.PageRequest pagination = 3;
}

// DelegationResponse is equivalent to Delegation except that it contains a
// balance in addition to shares which is more suitable for client responses.
message DelegationResponse {
  option (gogoproto.equal) = false;

  Delegation delegation = 1 [(gogoproto.nullable) = false];

  cosmos.base.v1beta1.Coin balance = 2 [(gogoproto.nullable) = false];
}

message QueryKaijusDelegationsResponse {
  repeated DelegationResponse delegations = 1 [(gogoproto.nullable) = false];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// KaijuDelegation
message QueryKaijuDelegationRequest {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string delegator_addr  = 1;
  string validator_addr  = 2;
  string denom           = 3;
  cosmos.base.query.v1beta1.PageRequest pagination = 4;
}

message QueryIBCKaijuDelegationRequest {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string delegator_addr  = 1;
  string validator_addr  = 2;
  string hash            = 3;
  cosmos.base.query.v1beta1.PageRequest pagination = 4;
}

message QueryKaijuDelegationResponse {
  DelegationResponse delegation = 1 [(gogoproto.nullable) = false];
}

// KaijuDelegation
message QueryKaijuDelegationRewardsRequest {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string delegator_addr  = 1;
  string validator_addr  = 2;
  string denom           = 3;
  cosmos.base.query.v1beta1.PageRequest pagination = 4;
}

message QueryIBCKaijuDelegationRewardsRequest {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string delegator_addr  = 1;
  string validator_addr  = 2;
  string hash            = 3;
  cosmos.base.query.v1beta1.PageRequest pagination = 4;
}

message QueryKaijuDelegationRewardsResponse {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  repeated cosmos.base.v1beta1.Coin rewards = 1 [
    (gogoproto.nullable) = false,
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Coin"
  ];
}

message QueryKaijuValidatorResponse {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string validator_addr = 1;
  repeated cosmos.base.v1beta1.DecCoin total_delegation_shares = 2 [
    (gogoproto.nullable)   = false
  ];
  repeated cosmos.base.v1beta1.DecCoin validator_shares = 3 [
    (gogoproto.nullable)   = false
  ];
  repeated cosmos.base.v1beta1.DecCoin total_staked = 4 [
    (gogoproto.nullable)   = false
  ];
}

message QueryKaijuValidatorsResponse {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  repeated QueryKaijuValidatorResponse validators = 1 [
    (gogoproto.nullable)   = false
  ];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}